{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "logicApp_name": {
      "type": "string",
      "defaultValue": "NotifyEntraAppRegSecretExpiration",
      "metadata": { "description": "Logic App (workflow) name." }
    },
    "keyVault_connection_name": {
      "type": "string",
      "defaultValue": "keyvault-conn",
      "metadata": { "description": "Name of the Key Vault connector resource." }
    },
    "office365_connection_name": {
      "type": "string",
      "defaultValue": "office365-conn",
      "metadata": { "description": "Name of the Office 365 Outlook connector resource." }
    },
    "keyVault_name": {
      "type": "string",
      "metadata": { "description": "Azure Key Vault name the connector will use (required for MI auth)." }
    },
    "tenant_id": {
      "type": "string",
      "metadata": { "description": "Microsoft Entra tenant ID (GUID)." }
    },
    "client_id": {
      "type": "string",
      "metadata": { "description": "App registration (client) ID used to call Microsoft Graph." }
    },
    "sharedMailbox": {
      "type": "string",
      "defaultValue": "",
      "metadata": { "description": "Shared mailbox to notify." }
    },
    "threshold_days": {
      "type": "int",
      "defaultValue": 30,
      "metadata": { "description": "Notify for secrets expiring within this many days." }
    },
    "graph_client_secret_name": {
      "type": "string",
      "metadata": {
        "description": "Name of the Key Vault secret that contains the Microsoft Graph client secret."
      }
    }
  },
  "variables": {},
  "resources": [
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[parameters('keyVault_connection_name')]",
      "location": "[resourceGroup().location]",
      "kind": "V1",
      "properties": {
        "displayName": "Azure Key Vault",
        "api": {
          "name": "keyvault",
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/keyvault')]",
          "type": "Microsoft.Web/locations/managedApis"
        },
        "parameterValueType": "Alternative",
        "alternativeParameterValues": {
          "vaultName": "[parameters('keyVault_name')]"
        },
        "customParameterValues": {},
        "authenticatedUser": {},
        "connectionState": "Enabled"
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[parameters('office365_connection_name')]",
      "location": "[resourceGroup().location]",
      "kind": "V1",
      "properties": {
        "displayName": "Office 365 Outlook",
        "api": {
          "name": "office365",
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]",
          "type": "Microsoft.Web/locations/managedApis"
        },
        "customParameterValues": {},
        "alternativeParameterValues": {},
        "authenticatedUser": {},
        "connectionState": "Enabled",
        "testLinks": [
          {
            "requestUri": "[concat('https://management.azure.com/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/connections/', parameters('office365_connection_name'), '/extensions/proxy/testconnection?api-version=2016-06-01')]",
            "method": "get"
          }
        ]
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2017-07-01",
      "name": "[parameters('logicApp_name')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('keyVault_connection_name'))]",
        "[resourceId('Microsoft.Web/connections', parameters('office365_connection_name'))]"
      ],
      "identity": { "type": "SystemAssigned" },
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "threshold_days": { "type": "Int", "defaultValue": "[parameters('threshold_days')]" },
            "graph_client_secret_name": { "type": "String", "defaultValue": "[parameters('graph_client_secret_name')]" },
            "tenant_id": { "type": "String", "defaultValue": "[parameters('tenant_id')]" },
            "client_id": { "type": "String", "defaultValue": "[parameters('client_id')]" },
            "sharedMailbox": { "type": "String", "defaultValue": "[parameters('sharedMailbox')]" },
            "$connections": { "type": "Object", "defaultValue": {} }
          },
          "triggers": {
            "Recurrence": {
              "type": "Recurrence",
              "recurrence": {
                "frequency": "Day",
                "interval": 1,
                "timeZone": "W. Europe Standard Time",
                "schedule": { "hours": [6], "minutes": [0] }
              }
            }
          },
          "actions": {
            "Get_threshold_date": {
              "type": "Expression",
              "kind": "GetFutureTime",
              "inputs": { "interval": "@parameters('threshold_days')", "timeUnit": "Day" },
              "runAfter": {}
            },
            "Initialize_API": {
              "type": "InitializeVariable",
              "runAfter": { "Get_threshold_date": ["Succeeded"] },
              "inputs": {
                "variables": [
                  {
                    "name": "nextLink",
                    "type": "string",
                    "value": "https://graph.microsoft.com/v1.0/applications?$select=appId,displayName,passwordCredentials,keyCredentials&$expand=owners($select=id,displayName,mail,userPrincipalName)&$top=999"
                  }
                ]
              }
            },
            "Get_secret": {
              "type": "ApiConnection",
              "runAfter": { "Initialize_API": ["Succeeded"] },
              "inputs": {
                "host": { "connection": { "name": "@parameters('$connections')['keyvault-1']['connectionId']" } },
                "method": "get",
                "path": "/secrets/@{encodeURIComponent(parameters('graph_client_secret_name'))}/value"
              },
              "runtimeConfiguration": { "secureData": { "properties": ["inputs", "outputs"] } }
            },
            "Until": {
              "type": "Until",
              "expression": "@equals(variables('nextLink'), '')",
              "limit": { "count": 60, "timeout": "PT1H" },
              "runAfter": { "Get_secret": ["Succeeded"] },
              "actions": {
                "HTTP": {
                  "type": "Http",
                  "inputs": {
                    "uri": "@variables('nextLink')",
                    "method": "GET",
                    "authentication": {
                      "type": "ActiveDirectoryOAuth",
                      "tenant": "@{parameters('tenant_id')}",
                      "audience": "https://graph.microsoft.com/",
                      "clientId": "@{parameters('client_id')}",
                      "secret": "@{body('Get_secret')?['value']}"
                    }
                  },
                  "runtimeConfiguration": { "contentTransfer": { "transferMode": "Chunked" } }
                },
                "Parse_JSON": {
                  "type": "ParseJson",
                  "runAfter": { "HTTP": ["Succeeded"] },
                  "inputs": {
                    "content": "@body('HTTP')",
                    "schema": {
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {
                        "value": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "additionalProperties": true,
                            "properties": {
                              "appId": { "type": "string" },
                              "displayName": { "type": ["string", "null"] },
                              "passwordCredentials": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "additionalProperties": true,
                                  "properties": {
                                    "customKeyIdentifier": { "type": ["string", "null"] },
                                    "displayName": { "type": ["string", "null"] },
                                    "endDateTime": { "type": "string" },
                                    "hint": { "type": ["string", "null"] },
                                    "keyId": { "type": "string" },
                                    "secretText": { "type": ["string", "null"] },
                                    "startDateTime": { "type": "string" }
                                  }
                                }
                              },
                              "keyCredentials": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "additionalProperties": true,
                                  "properties": {
                                    "customKeyIdentifier": { "type": ["string", "null"] },
                                    "displayName": { "type": ["string", "null"] },
                                    "endDateTime": { "type": "string" },
                                    "keyId": { "type": "string" },
                                    "startDateTime": { "type": "string" },
                                    "type": { "type": ["string", "null"] },
                                    "usage": { "type": ["string", "null"] }
                                  }
                                }
                              },
                              "owners": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "additionalProperties": true,
                                  "properties": {
                                    "id": { "type": "string" },
                                    "displayName": { "type": ["string", "null"] },
                                    "mail": { "type": ["string", "null"] },
                                    "userPrincipalName": { "type": ["string", "null"] }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "For_each_app": {
                  "type": "Foreach",
                  "runAfter": { "Parse_JSON": ["Succeeded"] },
                  "foreach": "@body('Parse_JSON')?['value']",
                  "actions": {
                    "Select_MapPwdCreds": {
                      "type": "Select",
                      "inputs": {
                        "from": "@coalesce(item()?['passwordCredentials'], json('[]'))",
                        "select": {
                          "displayName": "@string(item()?['displayName'])",
                          "keyId": "@string(item()?['keyId'])",
                          "endDateTime": "@string(item()?['endDateTime'])",
                          "type": "secret"
                        }
                      }
                    },
                    "Select_MapKeyCreds": {
                      "type": "Select",
                      "runAfter": { "Select_MapPwdCreds": ["Succeeded"] },
                      "inputs": {
                        "from": "@coalesce(item()?['keyCredentials'], json('[]'))",
                        "select": {
                          "displayName": "@string(item()?['displayName'])",
                          "keyId": "@string(item()?['keyId'])",
                          "endDateTime": "@string(item()?['endDateTime'])",
                          "type": "certificate"
                        }
                      }
                    },
                    "Compose_appSecrets": {
                      "type": "Compose",
                      "runAfter": { "Select_MapKeyCreds": ["Succeeded"] },
                      "inputs": "@union(body('Select_MapPwdCreds'), body('Select_MapKeyCreds'))"
                    },
                    "Filter_expiring_appSecrets": {
                      "type": "Query",
                      "runAfter": { "Compose_appSecrets": ["Succeeded"] },
                      "inputs": {
                        "from": "@outputs('Compose_appSecrets')",
                        "where": "@and(\n  not(empty(item()?['endDateTime'])),\n  greater(ticks(item()?['endDateTime']), ticks(utcNow())),\n  lessOrEquals(ticks(item()?['endDateTime']), ticks(body('Get_threshold_date')))\n)"
                      }
                    },
                    "Filter_expired_appSecrets": {
                      "type": "Query",
                      "runAfter": { "Filter_expiring_appSecrets": ["Succeeded"] },
                      "inputs": {
                        "from": "@outputs('Compose_appSecrets')",
                        "where": "@and(\n  not(empty(item()?['endDateTime'])),\n  lessOrEquals(ticks(item()?['endDateTime']), ticks(utcNow()))\n)"
                      }
                    },
                    "HTML_expired_secrets": {
                      "type": "Table",
                      "runAfter": { "Filter_expired_appSecrets": ["Succeeded"] },
                      "inputs": {
                        "from": "@body('Filter_expired_appSecrets')",
                        "format": "HTML",
                        "columns": [
                          { "header": "Name", "value": "@if(empty(item()?['displayName']), '-', item()?['displayName'])" },
                          { "header": "Secret ID", "value": "@{item()?['keyId']}" },
                          { "header": "End Date/Time (UTC)", "value": "@formatDateTime(item()?['endDateTime'],'yyyy-MM-dd HH:mm')" },
                          { "header": "Type", "value": "@{item()?['type']}" }
                        ]
                      }
                    },
                    "HTML_expiring_secrets": {
                      "type": "Table",
                      "runAfter": { "HTML_expired_secrets": ["Succeeded"] },
                      "inputs": {
                        "from": "@body('Filter_expiring_appSecrets')",
                        "format": "HTML",
                        "columns": [
                          { "header": "Name", "value": "@if(empty(item()?['displayName']), '-', item()?['displayName'])" },
                          { "header": "Secret ID", "value": "@{item()?['keyId']}" },
                          { "header": "End Date/Time (UTC)", "value": "@formatDateTime(item()?['endDateTime'],'yyyy-MM-dd HH:mm')" },
                          { "header": "Type", "value": "@{item()?['type']}" }
                        ]
                      }
                    },
                    "Condition_-_secretsToNotify": {
                      "type": "If",
                      "runAfter": { "HTML_expiring_secrets": ["Succeeded"] },
                      "expression": {
                        "or": [
                          { "not": { "equals": ["@length(coalesce(outputs('Filter_expired_appSecrets')?['body'], createArray()))", 0] } },
                          { "not": { "equals": ["@length(coalesce(outputs('Filter_expiring_appSecrets')?['body'], createArray()))", 0] } }
                        ]
                      },
                      "actions": {
                        "For_each_owner": {
                          "type": "Foreach",
                          "foreach": "@coalesce(item()?['owners'], json('[]'))",
                          "actions": {
                            "Condition_-_hasMail": {
                              "type": "If",
                              "expression": {
                                "and": [
                                  { "not": { "equals": ["@item()?['mail']", "@null"] } },
                                  { "not": { "equals": ["@trim(string(item()?['mail']))", ""] } }
                                ]
                              },
                              "actions": {
                                "Notify_owners": {
                                  "type": "ApiConnection",
                                  "inputs": {
                                    "host": { "connection": { "name": "@parameters('$connections')['office365-1']['connectionId']" } },
                                    "method": "post",
                                    "body": {
                                      "To": "@string(item()?['mail'])",
                                      "Subject": "[Action needed] - Expiring Entra App Registration Secret",
                                      "Body": "<title>Entra app registration secrets status</title>\n<style>\n    body {\n        margin: 0;\n        padding: 0;\n        background: #f5f6f8;\n        font-family: Segoe UI, Arial, sans-serif;\n    }\n\n    .wrapper {\n        width: 100%;\n        background: #f5f6f8;\n        padding: 24px 0;\n    }\n\n    .container {\n        max-width: 640px;\n        margin: 0 auto;\n        background: #ffffff;\n    }\n\n    .header {\n        background: #1f3a66;\n        color: #ffffff;\n        padding: 20px 24px;\n        font-size: 22px;\n        font-weight: 600;\n    }\n\n    .subheader {\n        background: #0a66c2;\n        color: #ffffff;\n        padding: 8px 24px;\n        font-size: 13px;\n        font-weight: 600;\n    }\n\n    .content {\n        padding: 24px;\n        color: #111827;\n        font-size: 14px;\n        line-height: 1.5;\n    }\n\n    .h2 {\n        font-size: 16px;\n        margin: 24px 0 8px;\n    }\n\n    .note {\n        color: #6b7280;\n        font-size: 12px;\n    }\n\n    .btn {\n        display: inline-block;\n        text-decoration: none;\n        background: #0a66c2;\n        color: #ffffff;\n        padding: 10px 16px;\n        border-radius: 6px;\n        font-weight: 600;\n    }\n\n    .card {\n        border: 1px solid #e5e7eb;\n        border-radius: 8px;\n        padding: 16px;\n        background: #fafafa;\n        margin-bottom: 20px;\n    }\n\n    table {\n        width: 100%;\n        border-collapse: collapse;\n        font-size: 13px;\n    }\n\n    th,\n    td {\n        border: 1px solid #e5e7eb;\n        padding: 8px;\n        text-align: left;\n    }\n\n    th {\n        background: #f3f4f6;\n    }\n\n    .footer {\n        color: #6b7280;\n        font-size: 12px;\n        padding: 16px 24px 24px;\n    }\n</style>\n\n\n<div class=\"wrapper\">\n    <table class=\"container\" cellspacing=\"0\" cellpadding=\"0\">\n        <tbody>\n            <tr>\n                <td class=\"header\">Action needed: Expiring Entra app registration secret</td>\n            </tr>\n            <tr>\n                <td class=\"subheader\">Microsoft Entra</td>\n            </tr>\n            <tr>\n                <td class=\"content\">\n                    <p>As of <strong>@{formatDateTime(utcNow(),'dddd, dd MMMM yyyy HH:mm')} (UTC)</strong>, the\n                        following client secrets are\n                        <strong>expired</strong> or <strong>expiring soon</strong>.\n                    </p>\n\n                    <div class=\"h2\"><strong>🗂️ App info</strong></div>\n                    <div class=\"card\">\n                        <p><strong>App Display Name:</strong> @{items('For_each_app')?['displayName']}</p>\n                        <p><strong>App ID:</strong> @{items('For_each_app')?['appId']}</p>\n                    </div>\n\n\n                    @{if(\n                    greater(length(coalesce(outputs('Filter_expired_appSecrets')?['body'], createArray())), 0),\n                    concat(\n                    '<div class=\"h2\"><strong>⛔ Expired secrets (',\n                            string(length(coalesce(outputs('Filter_expired_appSecrets')?['body'], createArray()))),\n                            ')</strong></div>\n                    <div class=\"card\">',\n                        body('HTML_expired_secrets'),\n                        '</div>'\n                    ),\n                    ''\n                    )}\n\n\n\n                    @{if(\n                    greater(length(coalesce(outputs('Filter_expiring_appSecrets')?['body'], createArray())), 0),\n                    concat(\n                    '<div class=\"h2\"><strong>⚠️ Expiring secrets (',\n                            string(length(coalesce(outputs('Filter_expiring_appSecrets')?['body'], createArray()))),\n                            ')</strong></div>\n                    <div class=\"card\">',\n                        body('HTML_expiring_secrets'),\n                        '</div>'\n                    ),\n                    ''\n                    )}\n\n\n                    <p style=\"margin-top:20px; text-align:center;\">\n                        <a class=\"btn\" href=\"https://entra.microsoft.com/#view/Microsoft_AAD_RegisteredApps/ApplicationsListBlade\">\n                            Review in Entra &nbsp;→\n                        </a>\n                    </p>\n\n                    <p>\n                        Rotate or remove any non-compliant credentials to meet your security requirements. <strong>If you do not act, applications using these secrets may fail authentication when the credentials expire.</strong>\n                    </p>\n                </td>\n            </tr>\n            <tr>\n                <td class=\"footer\">\n                    This notification was generated by an automated Logic App.\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n",
                                      "Importance": "Normal"
                                    },
                                    "path": "/v2/Mail"
                                  }
                                }
                              },
                              "else": { "actions": {} }
                            }
                          }
                        },
                        "Condition_-_sharedMailbox": {
                          "type": "If",
                          "runAfter": { "For_each_owner": ["Succeeded"] },
                          "expression": {
                            "and": [
                              { "not": { "equals": ["@parameters('sharedMailbox')", "@null"] } },
                              { "not": { "equals": ["@trim(string(parameters('sharedMailbox')))", ""] } }
                            ]
                          },
                          "actions": {
                            "Select_owners": {
                              "type": "Select",
                              "inputs": {
                                "from": "@coalesce(item()?['owners'], json('[]'))",
                                "select": {
                                  "displayName": "@string(item()?['displayName'])",
                                  "userPrincipalName": "@string(item()?['userPrincipalName'])",
                                  "notified": "@if(empty(item()?['mail']), 'No (no mailbox)', 'Yes')"
                                }
                              }
                            },
                            "HTML_owners": {
                              "type": "Table",
                              "runAfter": { "Select_owners": ["Succeeded"] },
                              "inputs": {
                                "from": "@body('Select_owners')",
                                "format": "HTML",
                                "columns": [
                                  { "header": "Name", "value": "@{item()?['displayName']}" },
                                  { "header": "UPN", "value": "@{item()?['userPrincipalName']}" },
                                  { "header": "Notified via mail", "value": "@item()?['notified']" }
                                ]
                              }
                            },
                            "Notify_admins": {
                              "type": "ApiConnection",
                              "runAfter": { "HTML_owners": ["Succeeded"] },
                              "inputs": {
                                "host": { "connection": { "name": "@parameters('$connections')['office365-1']['connectionId']" } },
                                "method": "post",
                                "body": {
                                  "To": "@parameters('sharedMailbox')",
                                  "Subject": "[Action needed] - Expiring Entra App Registration Secret",
                                  "Body": "<title>Entra app registration secrets status</title>\n<style>\n    body {\n        margin: 0;\n        padding: 0;\n        background: #f5f6f8;\n        font-family: Segoe UI, Arial, sans-serif;\n    }\n\n    .wrapper {\n        width: 100%;\n        background: #f5f6f8;\n        padding: 24px 0;\n    }\n\n    .container {\n        max-width: 640px;\n        margin: 0 auto;\n        background: #ffffff;\n    }\n\n    .header {\n        background: #1f3a66;\n        color: #ffffff;\n        padding: 20px 24px;\n        font-size: 22px;\n        font-weight: 600;\n    }\n\n    .subheader {\n        background: #0a66c2;\n        color: #ffffff;\n        padding: 8px 24px;\n        font-size: 13px;\n        font-weight: 600;\n    }\n\n    .content {\n        padding: 24px;\n        color: #111827;\n        font-size: 14px;\n        line-height: 1.5;\n    }\n\n    .h2 {\n        font-size: 16px;\n        margin: 24px 0 8px;\n    }\n\n    .note {\n        color: #6b7280;\n        font-size: 12px;\n    }\n\n    .btn {\n        display: inline-block;\n        text-decoration: none;\n        background: #0a66c2;\n        color: #ffffff;\n        padding: 10px 16px;\n        border-radius: 6px;\n        font-weight: 600;\n    }\n\n    .card {\n        border: 1px solid #e5e7eb;\n        border-radius: 8px;\n        padding: 16px;\n        background: #fafafa;\n        margin-bottom: 20px;\n    }\n\n    table {\n        width: 100%;\n        border-collapse: collapse;\n        font-size: 13px;\n    }\n\n    th,\n    td {\n        border: 1px solid #e5e7eb;\n        padding: 8px;\n        text-align: left;\n    }\n\n    th {\n        background: #f3f4f6;\n    }\n\n    .footer {\n        color: #6b7280;\n        font-size: 12px;\n        padding: 16px 24px 24px;\n    }\n</style>\n\n\n<div class=\"wrapper\">\n    <table class=\"container\" cellspacing=\"0\" cellpadding=\"0\">\n        <tbody>\n            <tr>\n                <td class=\"header\">Action needed: Expiring Entra app registration secret</td>\n            </tr>\n            <tr>\n                <td class=\"subheader\">Microsoft Entra</td>\n            </tr>\n            <tr>\n                <td class=\"content\">\n                    <p>As of <strong>@{formatDateTime(utcNow(),'dddd, dd MMMM yyyy HH:mm')} (UTC)</strong>, the\n                        following client secrets are\n                        <strong>expired</strong> or <strong>expiring soon</strong>.\n                    </p>\n\n<div class=\"h2\"><strong>🗂️ App info</strong></div>\n                    <div class=\"card\">\n                        <p><strong>App Display Name:</strong> @{items('For_each_app')?['displayName']}</p>\n                        <p><strong>App ID:</strong> @{items('For_each_app')?['appId']}</p>\n                    </div>\n\n\n@{if(\n                    greater(length(coalesce(outputs('Select_owners')?['body'], createArray())), 0),\n                    concat(\n                    '<div class=\"h2\"><strong>👤 Owners</strong></div>\n                    <div class=\"card\">',\n                        body('HTML_owners'),\n                        '</div>'\n                    ),\n                    ''\n                    )}\n\n                    @{if(\n                    greater(length(coalesce(outputs('Filter_expired_appSecrets')?['body'], createArray())), 0),\n                    concat(\n                    '<div class=\"h2\"><strong>⛔ Expired secrets (',\n                        string(length(coalesce(outputs('Filter_expired_appSecrets')?['body'], createArray()))),\n                        ')</strong></div>\n                    <div class=\"card\">',\n                        body('HTML_expired_secrets'),\n                        '</div>'\n                    ),\n                    ''\n                    )}\n\n\n\n                    @{if(\n                    greater(length(coalesce(outputs('Filter_expiring_appSecrets')?['body'], createArray())), 0),\n                    concat(\n                    '<div class=\"h2\"><strong>⚠️ Expiring secrets (',\n                        string(length(coalesce(outputs('Filter_expiring_appSecrets')?['body'], createArray()))),\n                        ')</strong></div>\n                    <div class=\"card\">',\n                        body('HTML_expiring_secrets'),\n                        '</div>'\n                    ),\n                    ''\n                    )}\n\n                    <p>\n                        Owners must rotate or remove any non-compliant credentials to meet your security requirements. <strong>If they do not act, applications using these secrets may fail authentication when the credentials expire.</strong>\n                        \n                    </p>\n                </td>\n            </tr>\n            <tr>\n                <td class=\"footer\">\nThis notification was generated by an automated Logic App.\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n",
                                  "Importance": "Normal"
                                },
                                "path": "/v2/Mail"
                              }
                            }
                          },
                          "else": { "actions": {} }
                        }
                      },
                      "else": { "actions": {} }
                    }
                  }
                },
                "Set_nextLink": {
                  "type": "SetVariable",
                  "runAfter": { "HTTP": ["Succeeded", "TimedOut", "Skipped", "Failed"] },
                  "inputs": { "name": "nextLink", "value": "@coalesce(outputs('HTTP')?['body']?['@odata.nextLink'], '')" }
                }
              }
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "keyvault-1": {
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/keyvault')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('keyVault_connection_name'))]",
                "connectionName": "[parameters('keyVault_connection_name')]",
                "connectionProperties": { "authentication": { "type": "ManagedServiceIdentity" } }
              },
              "office365-1": {
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('office365_connection_name'))]",
                "connectionName": "[parameters('office365_connection_name')]"
              }
            }
          }
        }
      }
    }
  ],
  "outputs": {}
}
